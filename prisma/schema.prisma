// generator client {
//   provider = "prisma-client-js"
//   output = "../generated/prisma-client"
// }

// datasource db {
//   provider = "mongodb"
//   url      = env("DB_URL")
// }

// enum role {
//   USER
//   ADMIN
//   Hoster
//   Driver
//   provider
//   customer
//   mechanic

// }
// model user {
//   id        String   @id @default(auto()) @map("_id") @db.ObjectId
//   name      String
//   username     String   @unique
//   password  String
//   role_id     role    
//   is_active Boolean  @default(true)
// }

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma-client" 
}

datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

enum role {
  USER
  ADMIN
  Hoster
  Driver
  provider
  customer
  mechanic
}

model user {
  id                  String   @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  username            String?  @unique
  email               String   @unique
  mobile              String
  alternate_mobile    String?
  password            String
  address             String?
  cityId              String?  @db.ObjectId
  stateId             String?  @db.ObjectId
  zipcode             String?
  role_id             role
  registration_status String   @default("pending") // pending, pending_approval, approved, rejected
  is_active           Boolean  @default(false)
  email_verified      Boolean  @default(false)
  mobile_verified     Boolean  @default(false)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model otp {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  mobile      String? // For mobile OTP
  email       String? // For email OTP
  otp         String
  type        String // 'mobile' or 'email'
  is_used     Boolean   @default(false)
  expires_at  DateTime
  created_at  DateTime  @default(now())
  verified_at DateTime?

  @@map("otps")
}

model Brand {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  logo      String?
  active    Boolean  @default(true)
  models    Model[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Model {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  brandId   String    @db.ObjectId
  brand     Brand     @relation(fields: [brandId], references: [id])
  active    Boolean   @default(true)
  variants  Variant[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Variant {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  modelId         String   @db.ObjectId
  model           Model    @relation(fields: [modelId], references: [id])
  fuelType        String?
  transmission    String?
  seatingCapacity Int?
  active          Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model State {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @unique
  code      String   @unique
  active    Boolean  @default(true)
  cities    City[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model City {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  stateId   String   @db.ObjectId
  state     State    @relation(fields: [stateId], references: [id])
  pincode   String?
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ChecklistCategory {
  id          String          @id @default(auto()) @map("_id") @db.ObjectId
  name        String          @unique
  description String?
  active      Boolean         @default(true)
  items       ChecklistItem[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model ChecklistItem {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  categoryId  String            @db.ObjectId
  category    ChecklistCategory @relation(fields: [categoryId], references: [id])
  description String?
  checkType   String? // e.g., 'boolean', 'text', 'number'
  required    Boolean           @default(false)
  active      Boolean           @default(true)
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

model Setting {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  key         String   @unique
  value       String
  category    String // e.g., 'general', 'email', 'payment'
  description String?
  dataType    String? // e.g., 'string', 'number', 'boolean'
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
